name: CI

on:
  push:
    tags: [ "*" ]
  workflow_dispatch:
    android:
    runs-on: ubuntu-latest
    environment: Android10
    permissions: write-all
    if: ${{github.repository == 'ElectronicHimate/sudachi}}
    steps:
      - name: 'Show If New Chnages'
        run: echo ${{ needs.syncro.outputs.isUpdated }}
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Modify Min Android 10
        run: |
            sed -i "s+minSdk = 30+minSdk = 29+" src/android/app/build.gradle.kts
            sed -i "s+BUILD_FLAVOR=\"mainline\"+BUILD_FLAVOR=\"ea\"+" .ci/scripts/android/build.sh
            sed -i "s+BUILD_FLAVOR=\"mainline\"+BUILD_FLAVOR=\"ea\"+" .ci/scripts/android/upload.sh
            sed -i "s+#ifndef _GNU_SOURCE+#ifdef ANDROID\n#include <android/sharedmem.h>\n#endif\n#ifndef _GNU_SOURCE+" src/common/host_memory.cpp
            sed -i "s+#if defined(__FreeBSD__) +#ifdef ANDROID\n\t\tfd = ASharedMemory_create(\"HostMemory\", backing_size);\n#elif  define(__FreeBSD__) +" src/common/host_memory.cpp
            sed -i "s+// Defined to extend the file with zeros+\n#ifndef ANDROID\n// Defined to extend the file with zeros+" src/common/host_memory.cpp
            sed -i "s+backing_base = static_cast<u8\\*>(pfn_VirtualAlloc2+backing_base = static_castd<u8\\*>(pfn_VirtualAlloc2+" src/common/host_memory.cpp
            sed -i "s+backing_base = static_cast<u8\\*>(+\n#endif\n\n\t\tbacking_base = static_cast<u8\\*>(+" src/common/host_memory.cpp
            sed -i "s+backing_base = static_castd<u8\\*>(pfn_VirtualAlloc2+backing_base = static_cast<u8\\*>(pfn_VirtualAlloc2+" src/common/host_memory.cpp
            cat src/common/host_memory.cpp
     steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Restore CCache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 3Gi

      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('app/**/*.xml') }}-${{ hashFiles('app/**.kt', 'app/**.java') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('app/**/*.xml') }}-
            ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle') }}-
            ${{ runner.os }}-gradle-

      - name: Install Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Temurin should come pre-installed on GitHub-hosted runners
          java-version: '17'

      - name: Install Ninja Build
        run: |
          sudo apt-get install -y ninja-build
          ln -s /usr/bin/ninja .

      - name: Install CMake & Android NDK
        run: echo "yes" | $ANDROID_HOME/tools/bin/sdkmanager "cmake;${{ env.CMAKE_VERSION }}" "ndk;${{ env.NDK_VERSION }}" --channel=3 | grep -v = || true

      - name: Decode Keystore
        if: env.IS_BUILD_SIGNED == 'true'
        env:
          KEYSTORE_ENCODED: ${{ secrets.KEYSTORE }}
        run: echo $KEYSTORE_ENCODED | base64 --decode > "/home/runner/keystore.jks"

      - name: Android Assemble
        env:
          SIGNING_STORE_PATH: "/home/runner/keystore.jks"
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          CMAKE_C_COMPILER_LAUNCHER: "ccache"
          CMAKE_CXX_COMPILER_LAUNCHER: "ccache"
          CCACHE_COMPILERCHECK: "string:${{ env.NDK_VERSION }}"
        run: |
          mv --assembleMainlineRelease --assembleMainlineReldebug

      - name: Rename APKs (Signed)
        if: env.IS_BUILD_SIGNED == 'true' && env.UPLOAD_ARTIFACTS == 'true'
        run: |
          mv app/build/outputs/apk/mainline/reldebug/app-mainline-reldebug.apk sudachi-$GITHUB_RUN_NUMBER-reldebug.apk
          mv app/build/outputs/apk/mainline/release/app-mainline-release.apk sudachi-$GITHUB_RUN_NUMBER-release.apk

      - name: Upload Signed Debug APK
        if: env.IS_BUILD_SIGNED == 'true' && env.UPLOAD_ARTIFACTS == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: sudachi-${{ github.run_number }}-reldebug.apk
          path: sudachi-${{ github.run_number }}-reldebug.apk

      - name: Upload Signed Release APK
        if: env.IS_BUILD_SIGNED == 'true' && env.UPLOAD_ARTIFACTS == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: sudachi-${{ github.run_number }}-release.apk
          path: sudachi-${{ github.run_number }}-release.apk

      - name: Rename APKs (Unsigned)
        if: env.IS_BUILD_SIGNED == 'false' && env.UPLOAD_ARTIFACTS == 'true'
        run: |
          mv app/build/outputs/apk/mainline/reldebug/app-mainline-reldebug.apk sudachi-$GITHUB_RUN_NUMBER-unsigned-reldebug.apk
          mv app/build/outputs/apk/mainline/release/app-mainline-release.apk sudachi-$GITHUB_RUN_NUMBER-unsigned-release.apk

      - name: Upload Unsigned Debug APK
        if: env.IS_BUILD_SIGNED == 'false' && env.UPLOAD_ARTIFACTS == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: sudachi-${{ github.run_number }}-unsigned-reldebug.apk
          path: sudachi-${{ github.run_number }}-unsigned-reldebug.apk

      - name: Upload Unsigned Release APK
        if: env.IS_BUILD_SIGNED == 'false' && env.UPLOAD_ARTIFACTS == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: sudachi-${{ github.run_number }}-unsigned-release.apk
          path: sudachi-${{ github.run_number }}-unsigned-release.apk
